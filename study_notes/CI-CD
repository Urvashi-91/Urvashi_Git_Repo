Build.xml --> To install nodejs and npm for a event sheduler app (Grade Build A) --> Install with dependencies and zip the app in a destination folder
Freestyle jenkins Project --> Copy token from Github (admin:repo_hook) --> Paste token in Jenkins (Configuration:GitHub) --> Create Freestyle Project --> Provide(GitHub Url,Build Triggers, Build Steps(Gradle Script), Gradle wrapper, Post Build Action) --> Save
Automated Deploy --> 1. to Staging server 2.to Production server --> Install SSH Plugin (Staging and Prod servers) --> Manage Jenkins (Publish over SSH) --> Create new Multi Branch Pipeline --> Take token grom Git and paste in Jenkins --> Create Jenkinsfile in GitHub repo
Dockerize App --> Create Dockerfile (Fork Source code and clone) --> Build Docker image(docker build) --> Run Docker Image (8080) --> Configure Jenkins (Add creds of Webserver, DockerHub, GitHub) --> Config Global property (Prod_IP) --> Create Multibranch Pipeline (Add tokens) --> Create Jenkinsfile (Build and Push to Docker Hub and Deployto Production)
Deploy Docker Image in Kubernetes as part of our pipeline --> Add Creds (Github repo, Github, DockerHub, kubeconfig(from master)) --> Create Kubernetes template (app-kube.yml)(Define Service and Deployment) --> Edit JenkinsFile (Add Stage to Deploy to Kubernetes Cluster) --> Create jenkins Project(run build from Github fork)
Monitoring in Kubernetes --> Install and Configure Prometheus and Grafana in a Kubernetes Cluster --> Prometheus: (clone kubenetes charts, create Prometheus-values.yml (alert:persistentVolume), use help to install prometheus-values.yml)) --> Grafana: (clone kubernetes charts, create grafana-values.yml, use helm to install Grafana)
